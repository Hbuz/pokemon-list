{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/PokemonListContainer.jsx\";\n\nimport React, { PureComponent } from 'react';\nimport request from 'superagent';\nimport PokemonList from './PokemonList';\nimport PokemonDetails from './PokemonDetails';\nimport PokemonSearchForm from './PokemonSearchForm';\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1 // container: {\n    //   padding: 24,\n    //   flexWrap: \"wrap\"\n    // }\n\n  }\n});\n\nconst PokemonListContainer = withStyles(styles)((_temp = class extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.showDetails = name => {\n      request(\"http://localhost:4001/pokemons/\".concat(name)).then(response => {\n        this.checkFavorite(response.body.pokemon, this.state.favorites);\n        this.setState({\n          selected: response.body.pokemon\n        });\n      });\n    };\n\n    this.changeFavorite = event => {\n      console.log(\"ciao   \" + event.target.checked);\n      const pokemonName = this.state.selected.name;\n      console.log(\"NAME \" + pokemonName);\n      this.setState({\n        favorite: event.target.checked\n      });\n\n      if (event.target.checked) {\n        //Add element to favorites in the state\n        console.log(\"old favorites:  \" + this.state.favorites);\n        const newFavoritesList = this.state.favorites.push(this.state.selected.id);\n        this.setState({\n          favorites: newFavoritesList\n        });\n        console.log(\"new favorites:  \" + this.state.favorites);\n        request.post(\"http://localhost:4001/users/\".concat(this.props.currentUser.userId)).query({\n          name: pokemonName\n        }).then(response => {\n          console.log(\"Added: \" + response.body);\n        });\n      } else {\n        //Remove element from favorites in the state\n        console.log(\"old favorites:  \" + this.state.favorites);\n        const newFavoritesList = this.state.favorites.filter(fav => fav !== this.state.selected.id); // console.log(\"new favorites:  \" + newFavoritesList)\n\n        this.setState({\n          favorites: newFavoritesList\n        });\n        console.log(\"new favorites:  \" + this.state.favorites);\n        request.del(\"http://localhost:4001/users/\".concat(this.props.currentUser.userId)).query({\n          name: pokemonName\n        }).then(response => {\n          console.log(\"Removed: \" + response.body);\n        });\n      }\n    };\n\n    this.checkFavorite = selected => {\n      request(\"http://localhost:4001/pokemons/favorites/\".concat(this.props.currentUser.userId)) //.query({ userId: this.props.currentUser.userId })\n      .then(response => {\n        console.log(\"BODY \" + JSON.stringify(response.body));\n        const favorites = response.body.favorites.map(elem => elem.pokemonId); //this.setState({ favorites: favorites })\n\n        if (favorites.includes(selected.id)) {\n          console.log(\"FOUND!!!!\");\n          this.setState({\n            favorite: true\n          });\n          console.log(\"PIPIPIOP     \" + JSON.stringify(this.state.favorites));\n        } else {\n          this.setState({\n            favorite: false\n          });\n        }\n      }); //   if (this.state.favorites && this.state.selected && this.state.favorites.includes(this.state.selected.id)) {\n    };\n\n    this.loggingOut = () => {\n      this.props.logout();\n    };\n\n    this.state = {\n      pokemons: null,\n      selected: null,\n      favorites: null,\n      favorite: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    //Get all pokemons\n    request('http://localhost:4001/pokemons').then(response => {\n      this.setState({\n        pokemons: response.body.pokemons\n      });\n    }).then(() => {\n      //Request favorites\n      // console.log(\"prova   \" + this.props.currentUser.userId)\n      request(\"http://localhost:4001/pokemons/favorites/\".concat(this.props.currentUser.userId)) //.query({ userId: this.props.currentUser.userId })\n      .then(response => {\n        console.log(\"BODY \" + JSON.stringify(response.body));\n        const favorites = response.body.favorites.map(elem => elem.pokemonId);\n        this.setState({\n          favorites: favorites\n        });\n        console.log(\"FAV \" + this.state.favorites);\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(JSON.stringify(this.state)); //Search pokemon\n\n    request('http://localhost:4001/pokemons').query({\n      name: this.state.searchKey\n    }).then(response => {\n      this.setState({\n        pokemons: response.body.pokemons\n      });\n    }); //Update list     \n  }\n\n  render() {\n    if (!this.state.pokemons) return \"Loading...\";\n    return React.createElement(Grid, {\n      container: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      item: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(PokemonSearchForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.loggingOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Log Out\")))), React.createElement(Grid, {\n      container: true,\n      item: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(PokemonList, {\n      pokemons: this.state.pokemons,\n      showDetails: this.showDetails,\n      favorites: this.state.favorites,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(PokemonDetails, {\n      selected: this.state.selected,\n      changeFavorite: this.changeFavorite,\n      favorite: this.state.favorite,\n      currentUser: this.props.currentUser,\n      loggingOut: this.loggingOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))));\n  }\n\n}, _temp));\n/*\n  <h1>Current User: {this.props.currentUser} </h1>\n  <button> Log Out </button>\n*/\n\nconst mapStateToProps = function (state) {\n  return {\n    currentUser: state.currentUser,\n    error: state.login.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logout\n})(PokemonListContainer);","map":{"version":3,"sources":["/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/PokemonListContainer.jsx"],"names":["React","PureComponent","request","PokemonList","PokemonDetails","PokemonSearchForm","Grid","Link","withStyles","connect","logout","styles","root","flexGrow","PokemonListContainer","constructor","props","showDetails","name","then","response","checkFavorite","body","pokemon","state","favorites","setState","selected","changeFavorite","event","console","log","target","checked","pokemonName","favorite","newFavoritesList","push","id","post","currentUser","userId","query","filter","fav","del","JSON","stringify","map","elem","pokemonId","includes","loggingOut","pokemons","handleChange","bind","handleSubmit","componentDidMount","value","preventDefault","searchKey","render","mapStateToProps","error","login"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport request from 'superagent'\nimport PokemonList from './PokemonList'\nimport PokemonDetails from './PokemonDetails'\nimport PokemonSearchForm from './PokemonSearchForm'\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux'\nimport { logout } from '../actions/auth'\n\n\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1\n  }\n  // container: {\n  //   padding: 24,\n  //   flexWrap: \"wrap\"\n  // }\n});\n\n\nconst PokemonListContainer = withStyles(styles)(\n  class extends PureComponent {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        pokemons: null,\n        selected: null,\n        favorites: null,\n        favorite: false\n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n\n    componentDidMount() {\n      //Get all pokemons\n      request('http://localhost:4001/pokemons')\n        .then(response => {\n          this.setState({ pokemons: response.body.pokemons })\n        })\n\n        .then(() => {\n          //Request favorites\n          // console.log(\"prova   \" + this.props.currentUser.userId)\n          request(`http://localhost:4001/pokemons/favorites/${this.props.currentUser.userId}`)\n            //.query({ userId: this.props.currentUser.userId })\n            .then(response => {\n              console.log(\"BODY \" + JSON.stringify(response.body))\n              const favorites = response.body.favorites.map(elem => (elem.pokemonId))\n              this.setState({ favorites: favorites })\n              console.log(\"FAV \" + this.state.favorites)\n            })\n        })\n\n    }\n\n    handleChange(event) {\n      this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit(event) {\n      event.preventDefault()\n      console.log(JSON.stringify(this.state))\n      //Search pokemon\n      request('http://localhost:4001/pokemons')\n        .query({ name: this.state.searchKey })\n        .then(response => {\n          this.setState({ pokemons: response.body.pokemons })\n        })\n      //Update list     \n    }\n\n    showDetails = (name) => {\n      request(`http://localhost:4001/pokemons/${name}`)\n        .then(response => {\n          this.checkFavorite(response.body.pokemon, this.state.favorites)\n          this.setState({ selected: response.body.pokemon })\n        })\n    }\n\n    changeFavorite = (event) => {\n      console.log(\"ciao   \" + event.target.checked)\n\n      const pokemonName = this.state.selected.name\n      console.log(\"NAME \" + pokemonName)\n      this.setState({ favorite: event.target.checked });\n      if (event.target.checked) {\n        //Add element to favorites in the state\n        console.log(\"old favorites:  \" + this.state.favorites)\n        const newFavoritesList = this.state.favorites.push(this.state.selected.id)\n        this.setState({ favorites: newFavoritesList })\n        console.log(\"new favorites:  \" + this.state.favorites)\n        request\n          .post(`http://localhost:4001/users/${this.props.currentUser.userId}`)\n          .query({ name: pokemonName })\n          .then(response => {\n            console.log(\"Added: \" + response.body)\n          })\n      } else {\n        //Remove element from favorites in the state\n        console.log(\"old favorites:  \" + this.state.favorites)\n        const newFavoritesList = this.state.favorites.filter(fav => fav !== this.state.selected.id)\n       // console.log(\"new favorites:  \" + newFavoritesList)\n        this.setState({ favorites: newFavoritesList})\n        console.log(\"new favorites:  \" + this.state.favorites)\n        request\n          .del(`http://localhost:4001/users/${this.props.currentUser.userId}`)\n          .query({ name: pokemonName })\n          .then(response => {\n            console.log(\"Removed: \" + response.body)\n          })\n      }\n    }\n\n    checkFavorite = (selected) => {\n      request(`http://localhost:4001/pokemons/favorites/${this.props.currentUser.userId}`)\n        //.query({ userId: this.props.currentUser.userId })\n        .then(response => {\n          console.log(\"BODY \" + JSON.stringify(response.body))\n          const favorites = response.body.favorites.map(elem => (elem.pokemonId))\n          //this.setState({ favorites: favorites })\n          if (favorites.includes(selected.id)) {\n            console.log(\"FOUND!!!!\")\n            this.setState({ favorite: true })\n            console.log(\"PIPIPIOP     \" + JSON.stringify(this.state.favorites))\n          } else {\n            this.setState({ favorite: false })\n          }\n        })\n      //   if (this.state.favorites && this.state.selected && this.state.favorites.includes(this.state.selected.id)) {\n    }\n\n\n    loggingOut = () => {\n      this.props.logout()\n    }\n\n\n    render() {\n\n      if (!this.state.pokemons) return \"Loading...\"\n\n      return (\n        <Grid container justify=\"space-between\">\n          <Grid container item justify=\"space-around\">\n            <Grid item>\n              <PokemonSearchForm handleSubmit={this.handleSubmit} handleChange={this.handleChange} />\n            </Grid>\n            <Grid item>\n              <Link to=\"/login\">\n                <button type=\"button\" onClick={this.loggingOut}>Log Out</button>\n              </Link>\n            </Grid>\n          </Grid>\n\n          <Grid container item justify=\"space-around\">\n            <Grid item>\n              <PokemonList pokemons={this.state.pokemons} showDetails={this.showDetails}\n                favorites={this.state.favorites} />\n            </Grid>\n            <Grid item>\n              <PokemonDetails selected={this.state.selected} changeFavorite={this.changeFavorite}\n                favorite={this.state.favorite} currentUser={this.props.currentUser} loggingOut={this.loggingOut} />\n            </Grid>\n          </Grid>\n        </Grid>\n      )\n    }\n  }\n)\n/*\n  <h1>Current User: {this.props.currentUser} </h1>\n  <button> Log Out </button>\n*/\nconst mapStateToProps = function (state) {\n  return {\n    currentUser: state.currentUser,\n    error: state.login.error\n  }\n}\n\nexport default connect(mapStateToProps, { logout })(PokemonListContainer)"]},"metadata":{},"sourceType":"module"}