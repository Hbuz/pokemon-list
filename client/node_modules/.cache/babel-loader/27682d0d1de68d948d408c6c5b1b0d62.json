{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/PokemonListContainer.jsx\";\n\nimport React, { PureComponent } from 'react';\nimport request from 'superagent';\nimport PokemonList from './PokemonList';\nimport PokemonDetails from './PokemonDetails';\nimport PokemonSearchForm from './PokemonSearchForm';\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1 // container: {\n    //   padding: 24,\n    //   flexWrap: \"wrap\"\n    // }\n\n  }\n});\n\nconst PokemonListContainer = withStyles(styles)((_temp = class extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemons: null,\n      selected: null,\n      favorites: null,\n      favorite: false\n    };\n\n    this.showDetails = name => {\n      request(\"http://localhost:4001/pokemons/\".concat(name)).then(response => {\n        this.checkFavorite(response.body.pokemon, this.state.favorites);\n        this.setState({\n          selected: response.body.pokemon\n        });\n      });\n    };\n\n    this.changeFavorite = event => {\n      console.log(\"ciao   \" + event.target.checked);\n      const pokemonName = this.state.selected.name;\n      console.log(\"NAME \" + pokemonName);\n      this.setState({\n        favorite: event.target.checked\n      });\n\n      if (event.target.checked) {\n        //Add element to favorites in the state\n        //FIX with ...state\n        const newFavoritesList = this.state.favorites;\n        newFavoritesList.push(this.state.selected.id);\n        this.setState({\n          favorites: newFavoritesList\n        });\n        request.post(\"http://localhost:4001/users/\".concat(this.props.currentUser.userId)).query({\n          name: pokemonName\n        }); // .then(response => {\n        //   //FIX with ...state\n        //   const newFavoritesList = this.state.favorites\n        //   newFavoritesList.push(response.body.pokemonId)\n        //   this.setState({ favorites: newFavoritesList })\n        //})\n      } else {\n        //Remove element from favorites in the state\n        const newFavoritesList = this.state.favorites.filter(fav => fav !== this.state.selected.id);\n        this.setState({\n          favorites: newFavoritesList\n        });\n        request.del(\"http://localhost:4001/users/\".concat(this.props.currentUser.userId)).query({\n          name: pokemonName\n        }); // .then(response => {\n        //   const newFavoritesList = this.state.favorites.filter(fav => fav !== response.body.pokemonId)\n        //   this.setState({ favorites: newFavoritesList })\n        // })\n      }\n    };\n\n    this.checkFavorite = selected => {\n      request(\"http://localhost:4001/pokemons/favorites/\".concat(this.props.currentUser.userId)).then(response => {\n        const favorites = response.body.favorites.map(elem => elem.pokemonId);\n\n        if (favorites.includes(selected.id)) {\n          this.setState({\n            favorite: true\n          });\n        } else {\n          this.setState({\n            favorite: false\n          });\n        }\n      });\n    };\n\n    this.loggingOut = () => {\n      this.props.logout();\n    };\n\n    this.state = {\n      pokemons: null,\n      selected: null,\n      favorites: null,\n      favorite: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    //Get all pokemons\n    request('http://localhost:4001/pokemons').then(response => {\n      this.setState({\n        pokemons: response.body.pokemons\n      });\n    }).then(() => {\n      //Request favorites\n      request(\"http://localhost:4001/pokemons/favorites/\".concat(this.props.currentUser.userId)).then(response => {\n        const favorites = response.body.favorites.map(elem => elem.pokemonId);\n        this.setState({\n          favorites: favorites\n        });\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(JSON.stringify(this.state)); //Search pokemon\n\n    request('http://localhost:4001/pokemons').query({\n      name: this.state.searchKey\n    }).then(response => {\n      this.setState({\n        pokemons: response.body.pokemons\n      });\n    }); //Update list     \n  }\n\n  render() {\n    if (!this.state.pokemons) return \"Loading...\";\n    return React.createElement(Grid, {\n      container: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      item: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(PokemonSearchForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.loggingOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Log Out\")))), React.createElement(Grid, {\n      container: true,\n      item: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(PokemonList, {\n      pokemons: this.state.pokemons,\n      showDetails: this.showDetails,\n      favorites: this.state.favorites,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(PokemonDetails, {\n      selected: this.state.selected,\n      changeFavorite: this.changeFavorite,\n      favorite: this.state.favorite,\n      currentUser: this.props.currentUser,\n      loggingOut: this.loggingOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))));\n  }\n\n}, _temp));\n\nconst mapStateToProps = function (state) {\n  return {\n    currentUser: state.currentUser,\n    error: state.login.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logout\n})(PokemonListContainer);","map":{"version":3,"sources":["/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/PokemonListContainer.jsx"],"names":["React","PureComponent","request","PokemonList","PokemonDetails","PokemonSearchForm","Grid","Link","withStyles","connect","logout","styles","root","flexGrow","PokemonListContainer","constructor","props","state","pokemons","selected","favorites","favorite","showDetails","name","then","response","checkFavorite","body","pokemon","setState","changeFavorite","event","console","log","target","checked","pokemonName","newFavoritesList","push","id","post","currentUser","userId","query","filter","fav","del","map","elem","pokemonId","includes","loggingOut","handleChange","bind","handleSubmit","componentDidMount","value","preventDefault","JSON","stringify","searchKey","render","mapStateToProps","error","login"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport request from 'superagent'\nimport PokemonList from './PokemonList'\nimport PokemonDetails from './PokemonDetails'\nimport PokemonSearchForm from './PokemonSearchForm'\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux'\nimport { logout } from '../actions/auth'\n\n\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1\n  }\n  // container: {\n  //   padding: 24,\n  //   flexWrap: \"wrap\"\n  // }\n});\n\n\nconst PokemonListContainer = withStyles(styles)(\n  class extends PureComponent {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        pokemons: null,\n        selected: null,\n        favorites: null,\n        favorite: false\n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n  state = {\n    pokemons: null,\n    selected: null,\n    favorites: null,\n    favorite: false\n  }\n\n\n    componentDidMount() {\n      //Get all pokemons\n      request('http://localhost:4001/pokemons')\n        .then(response => {\n          this.setState({ pokemons: response.body.pokemons })\n        })\n        .then(() => {\n          //Request favorites\n          request(`http://localhost:4001/pokemons/favorites/${this.props.currentUser.userId}`)\n            .then(response => {\n              const favorites = response.body.favorites.map(elem => (elem.pokemonId))\n              this.setState({ favorites: favorites })\n            })\n        })\n\n    }\n\n    handleChange(event) {\n      this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit(event) {\n      event.preventDefault()\n      console.log(JSON.stringify(this.state))\n      //Search pokemon\n      request('http://localhost:4001/pokemons')\n        .query({ name: this.state.searchKey })\n        .then(response => {\n          this.setState({ pokemons: response.body.pokemons })\n        })\n      //Update list     \n    }\n\n    showDetails = (name) => {\n      request(`http://localhost:4001/pokemons/${name}`)\n        .then(response => {\n          this.checkFavorite(response.body.pokemon, this.state.favorites)\n          this.setState({ selected: response.body.pokemon })\n        })\n    }\n\n    changeFavorite = (event) => {\n      console.log(\"ciao   \" + event.target.checked)\n\n      const pokemonName = this.state.selected.name\n      console.log(\"NAME \" + pokemonName)\n      this.setState({ favorite: event.target.checked });\n      if (event.target.checked) {\n        //Add element to favorites in the state\n        //FIX with ...state\n        const newFavoritesList = this.state.favorites\n        newFavoritesList.push(this.state.selected.id)\n        this.setState({ favorites: newFavoritesList })  \n        request\n          .post(`http://localhost:4001/users/${this.props.currentUser.userId}`)\n          .query({ name: pokemonName })\n          // .then(response => {\n          //   //FIX with ...state\n          //   const newFavoritesList = this.state.favorites\n          //   newFavoritesList.push(response.body.pokemonId)\n          //   this.setState({ favorites: newFavoritesList })\n          //})\n      } else {\n        //Remove element from favorites in the state\n       const newFavoritesList = this.state.favorites.filter(fav => fav !== this.state.selected.id)\n       this.setState({ favorites: newFavoritesList})\n        request\n          .del(`http://localhost:4001/users/${this.props.currentUser.userId}`)\n          .query({ name: pokemonName })\n          // .then(response => {\n          //   const newFavoritesList = this.state.favorites.filter(fav => fav !== response.body.pokemonId)\n          //   this.setState({ favorites: newFavoritesList })\n          // })\n      }\n    }\n\n    checkFavorite = (selected) => {\n      request(`http://localhost:4001/pokemons/favorites/${this.props.currentUser.userId}`)\n        .then(response => {\n          const favorites = response.body.favorites.map(elem => (elem.pokemonId))\n          if (favorites.includes(selected.id)) {\n            this.setState({ favorite: true })\n          } else {\n            this.setState({ favorite: false })\n          }\n        })\n      }\n\n\n    loggingOut = () => {\n      this.props.logout()\n    }\n\n\n    render() {\n\n      if (!this.state.pokemons) return \"Loading...\"\n\n      return (\n        <Grid container justify=\"space-between\">\n          <Grid container item justify=\"space-around\">\n            <Grid item>\n              <PokemonSearchForm handleSubmit={this.handleSubmit} handleChange={this.handleChange} />\n            </Grid>\n            <Grid item>\n              <Link to=\"/login\">\n                <button type=\"button\" onClick={this.loggingOut}>Log Out</button>\n              </Link>\n            </Grid>\n          </Grid>\n\n          <Grid container item justify=\"space-around\">\n            <Grid item>\n              <PokemonList pokemons={this.state.pokemons} showDetails={this.showDetails}\n                favorites={this.state.favorites} />\n            </Grid>\n            <Grid item>\n              <PokemonDetails selected={this.state.selected} changeFavorite={this.changeFavorite}\n                favorite={this.state.favorite} currentUser={this.props.currentUser} loggingOut={this.loggingOut} />\n            </Grid>\n          </Grid>\n        </Grid>\n      )\n    }\n  }\n)\n\nconst mapStateToProps = function (state) {\n  return {\n    currentUser: state.currentUser,\n    error: state.login.error\n  }\n}\n\nexport default connect(mapStateToProps, { logout })(PokemonListContainer)"]},"metadata":{},"sourceType":"module"}