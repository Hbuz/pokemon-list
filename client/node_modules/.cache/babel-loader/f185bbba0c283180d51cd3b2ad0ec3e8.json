{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/PokemonListContainer.jsx\";\n\nimport React, { PureComponent } from 'react';\nimport request from 'superagent';\nimport PokemonList from './PokemonList';\nimport PokemonDetails from './PokemonDetails';\nimport PokemonSearchForm from './PokemonSearchForm';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\nimport jsPDF from 'jspdf';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    padding: 24 // flexWrap: \"wrap\"\n\n  },\n  paper: {\n    padding: 32\n  },\n  user: {\n    marginRight: 32\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  }\n});\n\nconst PokemonListContainer = withStyles(styles)((_temp = class extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.showDetails = pokemonName => {\n      request(\"http://localhost:4001/pokemons/\".concat(pokemonName)).then(response => {\n        this.checkFavorite(response.body.pokemon, this.state.favorites);\n        this.setState({\n          selected: response.body.pokemon\n        });\n      });\n    };\n\n    this.changeFavorite = event => {\n      const pokemonName = this.state.selected.name;\n      this.setState({\n        favorite: event.target.checked\n      });\n\n      if (event.target.checked) {\n        //Add element to favorites in the state\n        this.setState(prevState => ({\n          favorites: [...prevState.favorites, prevState.selected.id]\n        }));\n        request.post(\"http://localhost:4001/users/\".concat(this.props.currentUser.userId)).query({\n          name: pokemonName\n        }).then(response => {\n          console.log(\"Pokemon \".concat(response.body.name, \" added as favorite\"));\n        });\n      } else {\n        //Remove element from favorites in the state\n        this.setState({\n          favorites: this.state.favorites.filter(fav => fav !== this.state.selected.id)\n        });\n        request.del(\"http://localhost:4001/users/\".concat(this.props.currentUser.userId)).query({\n          name: pokemonName\n        }).then(response => {\n          console.log(\"REMOVED! \" + JSON.stringify(response.body)); //   const newFavoritesList = this.state.favorites.filter(fav => fav !== response.body.pokemonId)\n          //   this.setState({ favorites: newFavoritesList })\n        });\n      }\n    };\n\n    this.checkFavorite = selected => {\n      request(\"http://localhost:4001/pokemons/favorites/\".concat(this.props.currentUser.userId)).then(response => {\n        const favorites = response.body.favorites.map(elem => elem.pokemonId);\n\n        if (favorites.includes(selected.id)) {\n          this.setState({\n            favorite: true\n          });\n        } else {\n          this.setState({\n            favorite: false\n          });\n        }\n      });\n    };\n\n    this.loggingOut = () => {\n      this.props.logout();\n    };\n\n    this.generatePdf = () => {\n      const doc = new jsPDF();\n      doc.text(\"Id: \".concat(this.state.selected.id), 10, 10);\n      doc.text(\"Name: \".concat(this.state.selected.name), 10, 20);\n      doc.text(\"Weight: \".concat(this.state.selected.weight), 10, 30);\n      doc.text(\"Height: \".concat(this.state.selected.height), 10, 40);\n      doc.text(\"Base experience: \".concat(this.state.selected.base_experience), 10, 50);\n      doc.text(\"Image URL: \".concat(this.state.selected.image), 10, 60, {\n        maxWidth: \"180\"\n      });\n      doc.text(\"Favorite: \".concat(this.state.favorite), 10, 80);\n      doc.save('pokemon_details.pdf');\n    };\n\n    this.state = {\n      pokemons: null,\n      selected: null,\n      favorites: null,\n      favorite: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    //Get all pokemons\n    request('http://localhost:4001/pokemons').then(response => {\n      this.setState({\n        pokemons: response.body.pokemons\n      });\n    }).then(() => {\n      //Request \n      //UNCOMMNET TODO\n      request(\"http://localhost:4001/pokemons/favorites/\".concat(this.props.currentUser.userId)).then(response => {\n        this.setState({\n          favorites: response.body.favorites.map(elem => elem.pokemonId)\n        });\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    request('http://localhost:4001/pokemons').query({\n      name: this.state.searchKey\n    }).then(response => {\n      this.setState({\n        pokemons: response.body.pokemons\n      });\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    if (!this.state.pokemons) return \"Loading...\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: classes.container,\n      justify: \"space-evenly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: classes.container,\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(PokemonSearchForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(PokemonList, {\n      pokemons: this.state.pokemons,\n      showDetails: this.showDetails,\n      favorites: this.state.favorites,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      className: classes.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Username\",\n      className: classes.textField,\n      value: this.props.currentUser && this.props.currentUser.username,\n      margin: \"normal\",\n      variant: \"outlined\",\n      InputProps: {\n        readOnly: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      onClick: this.loggingOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Log Out\"))))), React.createElement(Grid, {\n      item: true,\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(PokemonDetails, {\n      selected: this.state.selected,\n      changeFavorite: this.changeFavorite,\n      favorite: this.state.favorite,\n      currentUser: this.props.currentUser,\n      loggingOut: this.loggingOut,\n      generatePdf: this.generatePdf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }))))));\n  }\n\n}, _temp));\n\nconst mapStateToProps = function (state) {\n  return {\n    currentUser: state.currentUser,\n    error: state.login.error\n  };\n}; // < Grid container className = { classes.container } direction = \"column\" >\n//   <Grid item container justify=\"space-evenly\" alignItems=\"flex-end\">\n//     <Grid item>\n//       <PokemonSearchForm handleSubmit={this.handleSubmit} handleChange={this.handleChange} />\n//     </Grid>\n//     <Grid item>\n//       <Grid container alignItems=\"baseline\">\n//         <Grid item className={classes.user}>\n//           <Typography variant=\"h3\">\n//             {this.props.currentUser && this.props.currentUser.username}\n//           </Typography>\n//         </Grid>\n//         <Grid item>\n//           <Link to=\"/login\">\n//             <Button type=\"button\" onClick={this.loggingOut}>Log Out</Button>\n//           </Link>\n//         </Grid>\n//       </Grid>\n//     </Grid>\n//   </Grid>\n//   <Grid item container justify=\"space-evenly\">\n//     <Grid item>\n//       <PokemonList pokemons={this.state.pokemons} showDetails={this.showDetails}\n//         favorites={this.state.favorites} />\n//     </Grid>\n//     <Grid item className={classes.paper}>\n//       <PokemonDetails selected={this.state.selected} changeFavorite={this.changeFavorite}\n//         favorite={this.state.favorite} currentUser={this.props.currentUser} loggingOut={this.loggingOut} />\n//     </Grid>\n//   </Grid>\n//         </Grid >\n\n\nexport default connect(mapStateToProps, {\n  logout\n})(PokemonListContainer);","map":{"version":3,"sources":["/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/PokemonListContainer.jsx"],"names":["React","PureComponent","request","PokemonList","PokemonDetails","PokemonSearchForm","Grid","Button","Typography","TextField","Link","withStyles","connect","logout","jsPDF","styles","theme","root","flexGrow","container","padding","paper","user","marginRight","textField","marginLeft","spacing","PokemonListContainer","constructor","props","showDetails","pokemonName","then","response","checkFavorite","body","pokemon","state","favorites","setState","selected","changeFavorite","event","name","favorite","target","checked","prevState","id","post","currentUser","userId","query","console","log","filter","fav","del","JSON","stringify","map","elem","pokemonId","includes","loggingOut","generatePdf","doc","text","weight","height","base_experience","image","maxWidth","save","pokemons","handleChange","bind","handleSubmit","componentDidMount","value","preventDefault","searchKey","render","classes","username","readOnly","mapStateToProps","error","login"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport request from 'superagent'\nimport PokemonList from './PokemonList'\nimport PokemonDetails from './PokemonDetails'\nimport PokemonSearchForm from './PokemonSearchForm'\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux'\nimport { logout } from '../actions/auth'\nimport jsPDF from 'jspdf';\n\n\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    padding: 24\n    // flexWrap: \"wrap\"\n  },\n  paper: {\n    padding: 32\n  },\n  user: {\n    marginRight: 32\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n});\n\n\nconst PokemonListContainer = withStyles(styles)(\n  class extends PureComponent {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        pokemons: null,\n        selected: null,\n        favorites: null,\n        favorite: false\n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n      //Get all pokemons\n      request('http://localhost:4001/pokemons')\n        .then(response => {\n          this.setState({ pokemons: response.body.pokemons })\n        })\n        .then(() => {\n          //Request \n          //UNCOMMNET TODO\n          request(`http://localhost:4001/pokemons/favorites/${this.props.currentUser.userId}`)\n            .then(response => {\n              this.setState({ favorites: response.body.favorites.map(elem => (elem.pokemonId)) })\n            })\n        })\n\n    }\n\n    handleChange(event) {\n      this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit(event) {\n      event.preventDefault()\n      request('http://localhost:4001/pokemons')\n        .query({ name: this.state.searchKey })\n        .then(response => {\n          this.setState({ pokemons: response.body.pokemons })\n        })     \n    }\n\n    showDetails = (pokemonName) => {\n      request(`http://localhost:4001/pokemons/${pokemonName}`)\n        .then(response => {\n          this.checkFavorite(response.body.pokemon, this.state.favorites)\n          this.setState({ selected: response.body.pokemon })\n        })\n    }\n\n    changeFavorite = event => {\n      const pokemonName = this.state.selected.name\n      this.setState({ favorite: event.target.checked });\n      if (event.target.checked) {\n        //Add element to favorites in the state\n        this.setState(prevState => ({\n          favorites: [...prevState.favorites, prevState.selected.id]\n        }))\n        request\n          .post(`http://localhost:4001/users/${this.props.currentUser.userId}`)\n          .query({ name: pokemonName })\n          .then(response => {\n            console.log(`Pokemon ${response.body.name} added as favorite`)\n          })\n      } else {\n\n        //Remove element from favorites in the state\n        this.setState({ favorites: this.state.favorites.filter(fav => fav !== this.state.selected.id )})\n        \n        request\n          .del(`http://localhost:4001/users/${this.props.currentUser.userId}`)\n          .query({ name: pokemonName })\n          .then(response => {\n            console.log(\"REMOVED! \" + JSON.stringify(response.body))\n            //   const newFavoritesList = this.state.favorites.filter(fav => fav !== response.body.pokemonId)\n            //   this.setState({ favorites: newFavoritesList })\n          })\n      }\n    }\n\n    checkFavorite = (selected) => {\n      request(`http://localhost:4001/pokemons/favorites/${this.props.currentUser.userId}`)\n        .then(response => {\n          const favorites = response.body.favorites.map(elem => (elem.pokemonId))\n          if (favorites.includes(selected.id)) {\n            this.setState({ favorite: true })\n          } else {\n            this.setState({ favorite: false })\n          }\n        })\n    }\n\n\n    loggingOut = () => {\n      this.props.logout()\n    }\n\n\n    generatePdf = () => {\n      const doc = new jsPDF()\n\n      doc.text(`Id: ${this.state.selected.id}`, 10, 10)\n      doc.text(`Name: ${this.state.selected.name}`, 10, 20)\n      doc.text(`Weight: ${this.state.selected.weight}`, 10, 30)\n      doc.text(`Height: ${this.state.selected.height}`, 10, 40)\n      doc.text(`Base experience: ${this.state.selected.base_experience}`, 10, 50)\n      doc.text(`Image URL: ${this.state.selected.image}`, 10, 60, { maxWidth: \"180\" })\n      doc.text(`Favorite: ${this.state.favorite}`, 10, 80)\n      doc.save('pokemon_details.pdf')\n    }\n\n\n    render() {\n\n      const { classes } = this.props\n\n      if (!this.state.pokemons) return \"Loading...\"\n\n      return (\n        <div>\n          <Grid container className={classes.container} justify=\"space-evenly\">\n            <Grid item>\n              <Grid container className={classes.container} direction=\"column\">\n                <Grid item>\n                  <PokemonSearchForm handleSubmit={this.handleSubmit} handleChange={this.handleChange} />\n                </Grid>\n\n                <Grid item>\n                  <Grid container>\n                    <PokemonList pokemons={this.state.pokemons} showDetails={this.showDetails}\n                      favorites={this.state.favorites} />\n                  </Grid>\n                </Grid>\n\n              </Grid>\n            </Grid>\n\n            <Grid item>\n              <Grid container direction=\"column\">\n                <Grid item>\n                  <Grid container justify=\"space-between\">\n                    <Grid item className={classes.user}>\n                      {/* <Typography variant=\"h3\">\n                        {this.props.currentUser && this.props.currentUser.username}\n                      </Typography> */}\n                      <TextField\n                        label=\"Username\"\n                        className={classes.textField}\n                        value={this.props.currentUser && this.props.currentUser.username}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Link to=\"/login\">\n                        <Button type=\"button\" onClick={this.loggingOut}>Log Out</Button>\n                      </Link>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item className={classes.paper}>\n                  <PokemonDetails selected={this.state.selected} changeFavorite={this.changeFavorite}\n                    favorite={this.state.favorite} currentUser={this.props.currentUser}\n                    loggingOut={this.loggingOut} generatePdf={this.generatePdf} />\n                </Grid>\n              </Grid>\n\n            </Grid>\n          </Grid>\n        </div>)\n    }\n  }\n)\n\nconst mapStateToProps = function (state) {\n  return {\n    currentUser: state.currentUser,\n    error: state.login.error\n  }\n}\n\n// < Grid container className = { classes.container } direction = \"column\" >\n\n//   <Grid item container justify=\"space-evenly\" alignItems=\"flex-end\">\n//     <Grid item>\n//       <PokemonSearchForm handleSubmit={this.handleSubmit} handleChange={this.handleChange} />\n//     </Grid>\n\n//     <Grid item>\n//       <Grid container alignItems=\"baseline\">\n//         <Grid item className={classes.user}>\n//           <Typography variant=\"h3\">\n//             {this.props.currentUser && this.props.currentUser.username}\n//           </Typography>\n//         </Grid>\n//         <Grid item>\n//           <Link to=\"/login\">\n//             <Button type=\"button\" onClick={this.loggingOut}>Log Out</Button>\n//           </Link>\n//         </Grid>\n//       </Grid>\n//     </Grid>\n\n//   </Grid>\n\n//   <Grid item container justify=\"space-evenly\">\n//     <Grid item>\n//       <PokemonList pokemons={this.state.pokemons} showDetails={this.showDetails}\n//         favorites={this.state.favorites} />\n//     </Grid>\n//     <Grid item className={classes.paper}>\n//       <PokemonDetails selected={this.state.selected} changeFavorite={this.changeFavorite}\n//         favorite={this.state.favorite} currentUser={this.props.currentUser} loggingOut={this.loggingOut} />\n//     </Grid>\n//   </Grid>\n\n//         </Grid >\n\n\n\nexport default connect(mapStateToProps, { logout })(PokemonListContainer)"]},"metadata":{},"sourceType":"module"}