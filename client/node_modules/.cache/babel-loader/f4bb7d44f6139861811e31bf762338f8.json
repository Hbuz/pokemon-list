{"ast":null,"code":"var _jsxFileName = \"/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/pokemon/PokemonDetails.jsx\";\nimport * as React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CSVLink } from \"react-csv\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    maxWidth: 200\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  },\n  properties: {\n    maxWidth: 175\n  },\n  checkbox: {\n    width: 25,\n    height: 25\n  }\n}));\nexport default function PokemonDetails(props) {\n  const classes = useStyles();\n  if (!props.selected) return \"Select a Pokemon from the list\";\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.selected.name.toUpperCase()))), React.createElement(Grid, {\n    item: true,\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.img,\n    src: props.selected.image,\n    alt: props.selected.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    container: true,\n    className: classes.properties,\n    spacing: 1,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"baseline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Weight:\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.selected.weight))), React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"baseline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Height:\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.selected.height))), React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"baseline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Base Exp:\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, props.selected.base_experience))), props.currentUser && React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"baseline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Favorite\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: classes.checkbox,\n    type: \"checkbox\",\n    value: \"Favorite\",\n    checked: props.favorite,\n    onChange: props.changeFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"baseline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Export\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(CSVLink, {\n    data: [props.selected],\n    filename: \"pokemon_details.csv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"CSV\")), React.createElement(\"button\", {\n    onClick: props.generatePdf,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"PDF\")))))));\n}","map":{"version":3,"sources":["/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/pokemon/PokemonDetails.jsx"],"names":["React","Grid","Paper","Typography","Button","makeStyles","CSVLink","useStyles","theme","root","flexGrow","paper","padding","spacing","maxWidth","image","width","height","img","margin","display","maxHeight","properties","checkbox","PokemonDetails","props","classes","selected","name","toUpperCase","weight","base_experience","currentUser","favorite","changeFavorite","generatePdf"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CSVLink } from \"react-csv\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    maxWidth: 200,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  properties: {\n    maxWidth: 175,\n  },\n  checkbox: {\n    width: 25,\n    height: 25\n  }\n}));\n\n\nexport default function PokemonDetails(props) {\n\n  const classes = useStyles();\n\n  if (!props.selected) return \"Select a Pokemon from the list\"\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <Typography gutterBottom variant=\"h5\">\n              <strong>{props.selected.name.toUpperCase()}</strong>\n            </Typography>\n          </Grid>\n          <Grid item className={classes.image}>\n            <img className={classes.img} src={props.selected.image} alt={props.selected.image} />\n          </Grid>\n          <Grid item container className={classes.properties} spacing={1} direction=\"column\">\n            <Grid item container justify=\"space-between\" alignItems=\"baseline\">\n              <Grid item>\n                <Typography variant=\"h6\">\n                  Weight:\n                  </Typography>\n                  </Grid>\n              <Grid item>\n                <Typography variant=\"h5\">\n                  {props.selected.weight}\n                </Typography></Grid>\n            </Grid>\n            <Grid item container justify=\"space-between\" alignItems=\"baseline\">\n              <Grid item>\n                <Typography variant=\"h6\">\n                Height: \n                </Typography>\n                </Grid>\n              <Grid item>\n                <Typography variant=\"h5\">\n              {props.selected.height}\n              </Typography>\n              </Grid>\n\n            </Grid>\n            <Grid item container justify=\"space-between\" alignItems=\"baseline\">\n              <Grid item>\n                <Typography variant=\"h6\">\n                Base Exp: \n                </Typography>\n                </Grid>\n              <Grid item>\n                <Typography variant=\"h5\">\n              {props.selected.base_experience}\n              </Typography>\n              </Grid>\n            </Grid>\n\n            {props.currentUser &&\n              <Grid item container justify=\"space-between\" alignItems=\"baseline\">\n                <Grid item>\n                  <Typography gutterBottom variant=\"h6\">\n                    Favorite\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <input\n                  className={classes.checkbox}\n                    type=\"checkbox\"\n                    value=\"Favorite\"\n                    checked={props.favorite}\n                    onChange={props.changeFavorite}\n                  />\n                </Grid>\n              </Grid>\n            }\n            <Grid item container justify=\"space-between\" alignItems=\"baseline\">\n              <Grid item>\n                <Typography variant=\"h6\">\n                  Export\n                </Typography>\n              </Grid>\n              <Grid item>\n                \n                <CSVLink data={[props.selected]} filename={\"pokemon_details.csv\"}>\n                  <button >CSV</button>\n                </CSVLink>\n                <button onClick={props.generatePdf}>PDF</button>\n               \n              </Grid>\n            </Grid>\n          </Grid>\n\n        </Grid>\n      </Paper>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}