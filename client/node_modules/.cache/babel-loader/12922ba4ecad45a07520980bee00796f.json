{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/PokemonListContainer.jsx\";\n\nimport React, { PureComponent } from 'react';\nimport request from 'superagent';\nimport PokemonList from './PokemonList';\nimport PokemonDetails from './PokemonDetails';\nimport PokemonSearchForm from './PokemonSearchForm';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1 // container: {\n    //   padding: 24,\n    //   flexWrap: \"wrap\"\n    // }\n\n  }\n});\n\nconst PokemonListContainer = withStyles(styles)((_temp = class extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.showDetails = name => {\n      request(\"http://localhost:4001/pokemons/\".concat(name)).then(response => {\n        this.checkFavorite(response.body.pokemon, this.state.favorites);\n        this.setState({\n          selected: response.body.pokemon\n        });\n      });\n    };\n\n    this.changeFavorite = event => {\n      console.log(\"ciao   \" + event.target.checked);\n      const name = this.state.selected.name;\n      console.log(\"NAME \" + name);\n      this.setState({\n        favorite: event.target.checked\n      });\n\n      if (event.target.checked) {\n        request.post(\"http://localhost:4001/users/\".concat(this.props.currentUser.userId)).query({\n          name: name\n        }).then(response => {\n          console.log(\"Added: \" + response.body);\n        });\n      } else {\n        request.del(\"http://localhost:4001/users/\".concat(this.props.currentUser.userId)).query({\n          name: this.state.selected.name\n        }).then(response => {\n          console.log(\"Removed: \" + response.body);\n        });\n      }\n    };\n\n    this.checkFavorite = (selected, favorites) => {\n      //   if (this.state.favorites && this.state.selected && this.state.favorites.includes(this.state.selected.id)) {\n      if (favorites.includes(selected.id)) {\n        console.log(\"FOUND!!!!\");\n        this.setState({\n          favorite: true\n        });\n        console.log(\"PIPIPIOP     \" + JSON.stringify(this.state.favorites));\n      } else {\n        this.setState({\n          favorite: false\n        });\n      }\n    };\n\n    this.state = {\n      pokemons: null,\n      selected: null,\n      favorites: null,\n      favorite: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    //Get all pokemons\n    request('http://localhost:4001/pokemons').then(response => {\n      this.setState({\n        pokemons: response.body.pokemons\n      });\n    }).then(() => {\n      //Request favorites\n      // console.log(\"prova   \" + this.props.currentUser.userId)\n      request(\"http://localhost:4001/pokemons/favorites/\".concat(this.props.currentUser.userId)) //.query({ userId: this.props.currentUser.userId })\n      .then(response => {\n        console.log(\"BODY \" + JSON.stringify(response.body));\n        const favorites = response.body.favorites.map(elem => elem.pokemonId);\n        this.setState({\n          favorites: favorites\n        });\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(JSON.stringify(this.state)); //Search pokemon\n\n    request('http://localhost:4001/pokemons').query({\n      name: this.state.searchKey\n    }).then(response => {\n      this.setState({\n        pokemons: response.body.pokemons\n      });\n    }); //Update list     \n  }\n\n  render() {\n    if (!this.state.pokemons) return \"Loading...\";\n    return React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(PokemonSearchForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(PokemonList, {\n      pokemons: this.state.pokemons,\n      showDetails: this.showDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(PokemonDetails, {\n      selected: this.state.selected,\n      changeFavorite: this.changeFavorite,\n      favorite: this.state.favorite,\n      currentUser: this.props.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })));\n  }\n\n}, _temp));\n\nconst mapStateToProps = function (state) {\n  return {\n    currentUser: state.currentUser,\n    error: state.login.error\n  };\n};\n\nexport default connect(mapStateToProps, {})(PokemonListContainer);","map":{"version":3,"sources":["/home/marco/Documents/Job/Interviews/ProctorExam/Pokemon-list/client/src/components/PokemonListContainer.jsx"],"names":["React","PureComponent","request","PokemonList","PokemonDetails","PokemonSearchForm","Grid","withStyles","connect","styles","root","flexGrow","PokemonListContainer","constructor","props","showDetails","name","then","response","checkFavorite","body","pokemon","state","favorites","setState","selected","changeFavorite","event","console","log","target","checked","favorite","post","currentUser","userId","query","del","includes","id","JSON","stringify","pokemons","handleChange","bind","handleSubmit","componentDidMount","map","elem","pokemonId","value","preventDefault","searchKey","render","mapStateToProps","error","login"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport request from 'superagent'\nimport PokemonList from './PokemonList'\nimport PokemonDetails from './PokemonDetails'\nimport PokemonSearchForm from './PokemonSearchForm'\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux'\n\n\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1\n  }\n  // container: {\n  //   padding: 24,\n  //   flexWrap: \"wrap\"\n  // }\n});\n\n\nconst PokemonListContainer = withStyles(styles)(\n  class extends PureComponent {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        pokemons: null,\n        selected: null,\n        favorites: null,\n        favorite: false\n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n\n    componentDidMount() {\n      //Get all pokemons\n      request('http://localhost:4001/pokemons')\n        .then(response => {\n          this.setState({ pokemons: response.body.pokemons })\n        }).then(() => {\n          //Request favorites\n         // console.log(\"prova   \" + this.props.currentUser.userId)\n          request(`http://localhost:4001/pokemons/favorites/${this.props.currentUser.userId}`)\n            //.query({ userId: this.props.currentUser.userId })\n            .then(response => {\n              console.log(\"BODY \"+JSON.stringify(response.body))\n              const favorites = response.body.favorites.map(elem => (elem.pokemonId))\n              this.setState({ favorites: favorites })\n            })\n        }\n        )\n    }\n\n    handleChange(event) {\n      this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit(event) {\n      event.preventDefault()\n      console.log(JSON.stringify(this.state))\n      //Search pokemon\n      request('http://localhost:4001/pokemons')\n        .query({ name: this.state.searchKey })\n        .then(response => {\n          this.setState({ pokemons: response.body.pokemons })\n        })\n      //Update list     \n    }\n\n    showDetails = (name) => {\n      request(`http://localhost:4001/pokemons/${name}`)\n        .then(response => {\n          this.checkFavorite(response.body.pokemon, this.state.favorites)\n          this.setState({ selected: response.body.pokemon })\n        })\n    }\n\n    changeFavorite = (event) => {\n      console.log(\"ciao   \"+event.target.checked)\n      \n      const name = this.state.selected.name\n      console.log(\"NAME \"+name)\n      this.setState({ favorite: event.target.checked });\n      if (event.target.checked){\n        request\n          .post(`http://localhost:4001/users/${this.props.currentUser.userId}`)\n          .query({ name: name })\n          .then(response => {\n            console.log(\"Added: \"+response.body)\n          })\n      } else {\n        request\n          .del(`http://localhost:4001/users/${this.props.currentUser.userId}`)\n          .query({ name: this.state.selected.name })\n          .then(response => {\n            console.log(\"Removed: \" + response.body)\n          })\n      }\n    }\n\n    checkFavorite = (selected, favorites) => {\n   //   if (this.state.favorites && this.state.selected && this.state.favorites.includes(this.state.selected.id)) {\n      if (favorites.includes(selected.id)) {\n        console.log(\"FOUND!!!!\")\n        this.setState({ favorite: true })\n        console.log(\"PIPIPIOP     \" + JSON.stringify(this.state.favorites))\n      } else {\n        this.setState({ favorite: false })\n      }\n    }\n\n\n    render() {\n\n      if (!this.state.pokemons) return \"Loading...\"\n\n      return (\n        <Grid container alignItems=\"center\" justify=\"space-around\">\n          <Grid item>\n            <PokemonSearchForm handleSubmit={this.handleSubmit} handleChange={this.handleChange} />\n            <PokemonList pokemons={this.state.pokemons} showDetails={this.showDetails} />\n          </Grid>\n          <Grid item>\n            <PokemonDetails selected={this.state.selected} changeFavorite={this.changeFavorite}\n              favorite={this.state.favorite} currentUser={this.props.currentUser}/>\n          </Grid>\n        </Grid>\n      )\n    }\n  }\n)\n\nconst mapStateToProps = function (state) {\n  return {\n    currentUser: state.currentUser,\n    error: state.login.error\n  }\n}\n\nexport default connect(mapStateToProps, {})(PokemonListContainer)"]},"metadata":{},"sourceType":"module"}